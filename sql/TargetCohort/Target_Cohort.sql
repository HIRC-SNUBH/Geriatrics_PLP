
CREATE TABLE public.fra6bxujCodesets (
  codeset_id int NOT NULL,
  concept_id NUMBER(19) NOT NULL
)
;

INSERT INTO public.fra6bxujCodesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (SELECT distinct I.concept_id FROM (SELECT concept_id FROM cdm.CONCEPT   WHERE concept_id in (2000000018)
 
 ) I
 ) C   UNION ALL 
SELECT 2   codeset_id, c.concept_id FROM (SELECT distinct I.concept_id FROM (SELECT concept_id FROM cdm.CONCEPT   WHERE concept_id in (2721021)
 
 ) I
 ) C   UNION ALL 
SELECT 3   codeset_id, c.concept_id FROM (SELECT distinct I.concept_id FROM (SELECT concept_id FROM cdm.CONCEPT   WHERE concept_id in (9201)
 
 ) I
 ) C   UNION ALL 
SELECT 4   codeset_id, c.concept_id FROM (SELECT distinct I.concept_id FROM (SELECT concept_id FROM cdm.CONCEPT   WHERE concept_id in (2000000018,37018726)
 
 ) I
 ) C   UNION ALL 
SELECT 5   codeset_id, c.concept_id FROM (SELECT distinct I.concept_id FROM (SELECT concept_id FROM cdm.CONCEPT     WHERE concept_id in (4322976)
   UNION  select c.concept_id
  FROM cdm.CONCEPT c
  join cdm.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4322976)
  and c.invalid_reason is null
 
 ) I
 ) C   UNION ALL 
SELECT 6   codeset_id, c.concept_id FROM (SELECT distinct I.concept_id FROM (SELECT concept_id FROM cdm.CONCEPT     WHERE concept_id in (4301351)
   UNION  select c.concept_id
  FROM cdm.CONCEPT c
  join cdm.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4301351)
  and c.invalid_reason is null
 
 ) I
 ) C   UNION ALL 
SELECT 7   codeset_id, c.concept_id FROM (SELECT distinct I.concept_id FROM (SELECT concept_id FROM cdm.CONCEPT   WHERE concept_id in
 
 ) I
 ) C
             ;

CREATE TABLE public.fra6bxujqualified_events

AS
WITH primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id)  AS (SELECT P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as NUMBER(19)) as visit_occurrence_id
FROM (SELECT E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as NUMBER(19)) as visit_occurrence_id
  FROM (SELECT PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (SELECT C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_datetime as end_date,
       C.visit_occurrence_id, C.visit_start_date as sort_date
FROM (SELECT vo.* 
  FROM cdm.VISIT_OCCURRENCE vo
JOIN public.fra6bxujCodesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 3))
 ) C


-- End Visit Occurrence Criteria
 
 ) PE
JOIN (SELECT 0 as index_id, person_id, event_id
FROM (SELECT E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (SELECT C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_occurrence_id, C.visit_start_date as sort_date
FROM (SELECT vo.* 
  FROM cdm.VISIT_OCCURRENCE vo
JOIN public.fra6bxujCodesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 3))
 ) C


-- End Visit Occurrence Criteria
 ) Q
JOIN cdm.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
 ) E
  INNER JOIN
  (SELECT 0 as index_id, cc.person_id, cc.event_id
FROM (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (SELECT C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_occurrence_id, C.visit_start_date as sort_date
FROM (SELECT vo.* 
  FROM cdm.VISIT_OCCURRENCE vo
JOIN public.fra6bxujCodesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 3))
 ) C


-- End Visit Occurrence Criteria
 ) Q
JOIN cdm.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
 ) P
JOIN (SELECT C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, (C.procedure_date + NUMTODSINTERVAL(1, 'day')) as END_DATE,
       C.visit_occurrence_id, C.procedure_date as sort_date
FROM (SELECT po.* 
  FROM cdm.PROCEDURE_OCCURRENCE po
JOIN public.fra6bxujCodesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 6))
 ) C


-- End Procedure Occurrence Criteria
 
 ) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= (P.START_DATE + NUMTODSINTERVAL(0, 'day')) AND A.START_DATE <= (P.START_DATE + NUMTODSINTERVAL(14, 'day')) AND A.visit_occurrence_id = P.visit_occurrence_id  ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria
   
   ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
 ) G
-- End Criteria Group
 ) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id
   
   ) E
	JOIN cdm.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
    WHERE (OP.OBSERVATION_PERIOD_START_DATE + NUMTODSINTERVAL(0, 'day')) <= E.START_DATE AND (E.START_DATE + NUMTODSINTERVAL(0, 'day')) <= OP.OBSERVATION_PERIOD_END_DATE
 ) P

-- End Primary Events
 
 )
 SELECT
event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id

FROM
(SELECT pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as NUMBER(19)) as visit_occurrence_id
  FROM primary_events pe
 
 ) QE
 
 ;

--- Inclusion Rule Inserts

CREATE TABLE public.fra6bxujInclusion_0
 AS
SELECT
0 as inclusion_rule_id, person_id, event_id

FROM
(SELECT pe.person_id, pe.event_id
  FROM public.fra6bxujqualified_events pe

JOIN (SELECT 0 as index_id, person_id, event_id
FROM (SELECT E.person_id, E.event_id 
  FROM public.fra6bxujqualified_events E
  INNER JOIN
  (SELECT 0 as index_id, e.person_id, e.event_id
FROM public.fra6bxujqualified_events E
JOIN cdm.PERSON P ON P.PERSON_ID = E.PERSON_ID
  WHERE EXTRACT(YEAR FROM E.start_date) - P.year_of_birth >= 65
GROUP BY e.person_id, e.event_id
-- End Demographic Criteria
   
   ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
 ) G
-- End Criteria Group
 ) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
 ) Results
 ;

CREATE TABLE public.fra6bxujInclusion_1
 AS
SELECT
1 as inclusion_rule_id, person_id, event_id

FROM
(SELECT pe.person_id, pe.event_id
  FROM public.fra6bxujqualified_events pe

JOIN (SELECT 0 as index_id, person_id, event_id
FROM (SELECT E.person_id, E.event_id 
  FROM public.fra6bxujqualified_events E
  INNER JOIN
  (SELECT 0 as index_id, cc.person_id, cc.event_id
FROM (SELECT p.person_id, p.event_id 
FROM public.fra6bxujqualified_events P
JOIN (SELECT C.person_id, C.procedure_occurrence_id as event_id, C.procedure_datetime as start_date, (C.procedure_datetime + NUMTODSINTERVAL(1, 'day')) as END_DATE,
       C.visit_occurrence_id, C.procedure_datetime as sort_date
FROM (SELECT po.* 
  FROM cdm.PROCEDURE_OCCURRENCE po
JOIN public.fra6bxujCodesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 7))
 ) C


-- End Procedure Occurrence Criteria
 
 ) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= (P.START_DATE + NUMTODSINTERVAL(0, 'day')) AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= (P.END_DATE + NUMTODSINTERVAL(0, 'day')) AND A.visit_occurrence_id = P.visit_occurrence_id  ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria
   
   ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
 ) G
-- End Criteria Group
 ) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
 ) Results
 ;

CREATE TABLE public.fra6bxujinclusion_events
 AS
SELECT
inclusion_rule_id, person_id, event_id

FROM
(SELECT inclusion_rule_id, person_id, event_id FROM public.fra6bxujInclusion_0
  UNION ALL
select inclusion_rule_id, person_id, event_id FROM public.fra6bxujInclusion_1 ) I ;
TRUNCATE TABLE public.fra6bxujInclusion_0;
DROP TABLE public.fra6bxujInclusion_0;

TRUNCATE TABLE public.fra6bxujInclusion_1;
DROP TABLE public.fra6bxujInclusion_1;


CREATE TABLE public.fra6bxujincluded_events

AS
WITH cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal)  AS (SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  FROM (SELECT Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as NUMBER(19)), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    FROM public.fra6bxujqualified_events Q
    LEFT JOIN public.fra6bxujinclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
   ) MG -- matching groups
  
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
    WHERE (MG.inclusion_rule_mask = POWER(cast(2 as NUMBER(19)),2)-1)
 
 )
 SELECT
event_id, person_id, start_date, end_date, op_start_date, op_end_date

FROM
cteIncludedEvents Results
 
 ;

-- date offset strategy

CREATE TABLE public.fra6bxujstrategy_ends
 AS
SELECT
event_id, person_id, 
  case when (end_date + NUMTODSINTERVAL(0, 'day')) > op_end_date then op_end_date else (end_date + NUMTODSINTERVAL(0, 'day')) end as end_date

FROM
public.fra6bxujincluded_events ;


-- generate cohort periods into #final_cohort
CREATE TABLE public.fra6bxujcohort_rows

AS
WITH cohort_ends (event_id, person_id, end_date)  AS (SELECT event_id, person_id, end_date FROM public.fra6bxujstrategy_ends
 
 ),
first_ends (person_id, start_date, end_date) as
(SELECT F.person_id, F.start_date, F.end_date
	FROM (SELECT I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  FROM public.fra6bxujincluded_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	 ) F
	  WHERE F.ordinal = 1
 )
 SELECT
person_id, start_date, end_date

FROM
first_ends ;

CREATE TABLE public.fra6bxujfinal_cohort

AS
WITH cteEndDates (person_id, end_date)  AS (SELECT person_id
		, (event_date + NUMTODSINTERVAL(-1 * 0, 'day'))  as end_date
	FROM (SELECT person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM (SELECT person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM public.fra6bxujcohort_rows
     
			  UNION ALL
   
   
			SELECT
				person_id
				, (end_date + NUMTODSINTERVAL(0, 'day'))  end_date
				, 1 AS event_type
				, NULL
			FROM public.fra6bxujcohort_rows
		 ) RAWDATA
	 ) e
	  WHERE (2 * e.start_ordinal) - e.overall_ord = 0
 ),
cteEnds (person_id, start_date, end_date) AS
(SELECT c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM public.fra6bxujcohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
 )
 SELECT
person_id, min(start_date) as start_date, end_date

FROM
cteEnds
group by person_id, end_date
 ;

DELETE FROM public.cohort where cohort_definition_id = 4284;
INSERT INTO public.cohort (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
SELECT 4284 as cohort_definition_id, person_id, start_date, end_date 
FROM public.fra6bxujfinal_cohort CO
 ;



TRUNCATE TABLE public.fra6bxujstrategy_ends;
DROP TABLE public.fra6bxujstrategy_ends;


TRUNCATE TABLE public.fra6bxujcohort_rows;
DROP TABLE public.fra6bxujcohort_rows;

TRUNCATE TABLE public.fra6bxujfinal_cohort;
DROP TABLE public.fra6bxujfinal_cohort;

TRUNCATE TABLE public.fra6bxujinclusion_events;
DROP TABLE public.fra6bxujinclusion_events;

TRUNCATE TABLE public.fra6bxujqualified_events;
DROP TABLE public.fra6bxujqualified_events;

TRUNCATE TABLE public.fra6bxujincluded_events;
DROP TABLE public.fra6bxujincluded_events;

TRUNCATE TABLE public.fra6bxujCodesets;
DROP TABLE public.fra6bxujCodesets;


/*
  TARGET COHORT
  - INDEX_DATE  : admission datetime --> operation datetime
  
*/

DELETE FROM public.cohort C1
where C1.cohort_definition_id = 4284 AND NOT EXISTS (
    SELECT 1
    FROM cdm.PROCEDURE_OCCURRENCE P1
    WHERE
        P1.PERSON_ID = C1.SUBJECT_ID
        AND P1.PROCEDURE_DATETIME BETWEEN C1.COHORT_START_DATE AND C1.COHORT_START_DATE+14
        AND P1.PROCEDURE_CONCEPT_ID IN (2000269,2000289,2000307,2001047,2002174,2002522,2003391,2003402,2003403,2003404,2003405,2003407,2003427,2006417,2006419,2006421,4000158,4001100,4001359,4012004,4012305,4012321,4012325,4012461,4012930,4012932,4012936,4013506,4016163,4017329,4017464,4018300,4019422,4019635,4020329,4020330,4020466,4020467,4021544,4022013,4022791,4022910,4026223,4026915,4029416,4029418,4030099,4030148,4030150,4030412,4030824,4030825,4031970,4031972,4032564,4033396,4034657,4035734,4040299,4040924,4041194,4041249,4042907,4046247,4047947,4048556,4049330,4049552,4049678,4049680,4049813,4049816,4050128,4050137,4050138,4050262,4050407,4050408,4051016,4051017,4051018,4051176,4052255,4052391,4052393,4054559,4058266,4062763,4064257,4064257,4065449,4066035,4066442,4066543,4066636,4066807,4066882,4067285,4067461,4067463,4067888,4067908,4068146,4068214,4068634,4069074,4069129,4069166,4069351,4070365,4070372,4070478,4070869,4071096,4071118,4071443,4071443,4071534,4071537,4073199,4073526,4074077,4074846,4076862,4078308,4078310,4080015,4080760,4087575,4088727,4093167,4096461,4097958,4098273,4098731,4099462,4099970,4100324,4100351,4100937,4100937,4101538,4102383,4103646,4105589,4106088,4107567,4107571,4108316,4113224,4114630,4115341,4116629,4116952,4117192,4118196,4118958,4119255,4120657,4120958,4120959,4120960,4120961,4121236,4122303,4122322,4122422,4122777,4122781,4122908,4123402,4123419,4123585,4123739,4124040,4124045,4124310,4124311,4125467,4125467,4125784,4128563,4128864,4128868,4129353,4131021,4131910,4134541,4134717,4135177,4137462,4138691,4139402,4139403,4139548,4139992,4140007,4140686,4141148,4141243,4141254,4141372,4141456,4142182,4142233,4142327,4142436,4144212,4144565,4144584,4144721,4144796,4144800,4144849,4144927,4146780,4147839,4147849,4147913,4148235,4148762,4148793,4148898,4148948,4148975,4149106,4151121,4151530,4151662,4152086,4152745,4157779,4161023,4162987,4163971,4163975,4164150,4164300,4164907,4165576,4165739,4166196,4166294,4166760,4166855,4166993,4167080,4167809,4167978,4168628,4168926,4171187,4171194,4171687,4172166,4172358,4173452,4173612,4174035,4175489,4177376,4179797,4180074,4180164,4181781,4182577,4183842,4184913,4185734,4185848,4186613,4187533,4187786,4191258,4192247,4193037,4193288,4193791,4194124,4194238,4194253,4194372,4194967,4195307,4195648,4195720,4195854,4195874,4196081,4196199,4196678,4196919,4196923,4197068,4197412,4197729,4198190,4198981,4199270,4199951,4199952,4200391,4200418,4201613,4203442,4204677,4209860,4210595,4211860,4211977,4213045,4215782,4216250,4217180,4218295,4219780,4222123,4222325,4222733,4223241,4224173,4224467,4225375,4225427,4225585,4226958,4227016,4227605,4228202,4229920,4230220,4230233,4230250,4231441,4231545,4231680,4231681,4232190,4233085,4233214,4233237,4233412,4233414,4233416,4233417,4234134,4234382,4234811,4234972,4235130,4235749,4236711,4236969,4237353,4237585,4238120,4238497,4238646,4239077,4239473,4240701,4240962,4242997,4243973,4244285,4244809,4245629,4246722,4247012,4249113,4249893,4250458,4250795,4251314,4251929,4253069,4253523,4259121,4259286,4261365,4262797,4262950,4263259,4263386,4263740,4264064,4264119,4264216,4264332,4266622,4266668,4267134,4267296,4268321,4270198,4270222,4270654,4271057,4271058,4271183,4271596,4271929,4271995,4272003,4273524,4275570,4275911,4279534,4279766,4279903,4280083,4280974,4281511,4281814,4281839,4283095,4283832,4286502,4286804,4287259,4287325,4291953,4293893,4295431,4296594,4296620,4296871,4297287,4297515,4299955,4300713,4301125,4302886,4304943,4310408,4312613,4313138,4314146,4314572,4314683,4315014,4316068,4322169,4322178,4322181,4322471,4322818,4323447,4323560,4325283,4327067,4327488,4328484,4329559,4330851,4331609,4336756,4337253,4337833,4339542,4340250,35624144,37111483,37111484,40482705,40486668,40487973,40487974,42538237,44807806,44809616)
        );
DELETE FROM public.cohort where cohort_definition_id = 4274;
INSERT /*+ APPEND */ INTO public.cohort
WITH GS_CONCEPT_SET AS (
SELECT concept_id
  FROM (SELECT distinct concept_id
		  FROM (SELECT concept_id
				  FROM cdm.CONCEPT
				 WHERE concept_id in
			   )
		)
  )
SELECT 4274 AS COHORT_DEFINITION_ID
     , SUBJECT_ID, MIN(PROCEDURE_DATETIME) AS COHORT_START_DATE, COHORT_END_DATE
FROM public.cohort C1
INNER JOIN cdm.PROCEDURE_OCCURRENCE P1 ON C1.SUBJECT_ID = P1.PERSON_ID
--INNER JOIN cdm.PROVIDER P2 ON P1.PROVIDER_ID = P2.PROVIDER_ID
WHERE C1.COHORT_DEFINITION_ID = 4284
--  AND P1.PROCEDURE_TYPE_CONCEPT_ID = 38000275 /* EHR order list entry : 수술 */
  AND P1.PROCEDURE_CONCEPT_ID IN (SELECT CONCEPT_ID FROM GS_CONCEPT_SET) /* GS 수술 코드 LIST */
--  AND P2.SPECIALTY_CONCEPT_ID = 38004447 /* General surgery 38004447 : GS 수술 CONCEPT_ID로 조건 사용하기에 SPECIALTY 조건 제외 */
  AND P1.PROCEDURE_DATETIME BETWEEN C1.COHORT_START_DATE AND C1.COHORT_START_DATE+14
GROUP BY SUBJECT_ID, COHORT_START_DATE, COHORT_END_DATE;
COMMIT;